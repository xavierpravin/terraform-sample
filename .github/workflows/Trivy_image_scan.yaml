name: Trivy Container Scan and Upload Results

on:
  push:
    branches:
      - main
      - xyz
  pull_request:
    branches:
      - main

jobs:
  trivy-scan:
    runs-on: ubuntu-latest

    # env:
    #   PAT_AZURE_DEVOPS: ${{ secrets.PAT_AZURE_DEVOPS }}
    #   GH_TOKEN: ${{ secrets.GH_TOKEN }}
    #   acr_name: your_acr_name
    # inputs:
    #   app-name: notification-hub
    #   app-sha: ${{ github.sha }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install Trivy
        run: |
          VERSION=$(curl -s https://api.github.com/repos/aquasecurity/trivy/releases/latest | jq -r .tag_name)
          wget https://github.com/aquasecurity/trivy/releases/download/${VERSION}/trivy_${VERSION}_Linux-64bit.tar.gz
          tar zxvf trivy_${VERSION}_Linux-64bit.tar.gz
          sudo mv trivy /usr/local/bin/

      #- name: Build Docker image
      #  run: |
      #    docker build -t ${{ env.acr_name }}.azurecr.io/${{ inputs.app-name }}:${{ inputs.app-sha }} .

      #- name: Save Docker image as tar
      #  run: |
      #    docker save ${{ env.acr_name }}.azurecr.io/${{ inputs.app-name }}:${{ inputs.app-sha }} -o ${{ inputs.app-name }}.tar

      - name: Run Trivy scan
        run: |
          #trivy image --input ${{ inputs.app-name }}.tar --security-checks vuln --exit-code 1 --ignore-unfixed=true --format json --output ${{ inputs.app-name }}.json
          trivy fs --format json --output trivy-results.json .

      - name: Upload Trivy scan results to GitHub Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: trivy-results
          path: trivy-results.json
